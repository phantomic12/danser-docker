name: Test Danser Functionality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-danser:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      actions: write
      checks: write

    container:
      image: ghcr.io/${{ github.repository }}:latest
      options: --user root

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Prevent git from changing line endings, which can affect hashes
          autocrlf: 'false'

      - name: Copy files to required locations
        run: |
          mkdir -p /app/source
          cp -r . /app/source/

      - name: Create danser configuration
        run: |
          mkdir -p /usr/local/bin/settings
          cat > /usr/local/bin/settings/ci-settings.json << EOF
          {
            "General": {
              "OsuSongsDir": "/app/songs",
              "OsuReplaysDir": "/app"
            },
            "Recording": {
              "Encoder": "libx264",
              "PixelFormat": "yuv420p",
              "FPS": 60,
              "Width": 1920,
              "Height": 1080,
              "OutputDir": "/app/output"
            }
          }
          EOF

      - name: Set up directories
        run: |
          echo "--- Listing /app/source contents ---"
          ls -R /app/source
          echo "--- Listing /app/source/songs contents ---"
          ls -R /app/source/songs || echo "/app/source/songs not found or empty"
          
          echo "--- Calculating MD5 hashes for SOURCE .osu files in /app/source/songs ---"
          find /app/source/songs -name '*.osu' -exec md5sum {} \;

          mkdir -p /app/songs
          mkdir -p /app/output
          
          echo "--- Copying songs ---"
          cp -vr /app/source/songs/* /app/songs/ || echo "Failed to copy songs"
          echo "--- Listing /app/songs contents after copy ---"
          ls -R /app/songs
          
          echo "--- Copying replay ---"
          cp -v /app/source/replay.osr /app/ || echo "Failed to copy replay"
          echo "--- Listing /app contents after replay copy ---"
          ls -R /app

      - name: Calculate beatmap hashes
        run: |
          echo "--- Calculating MD5 hashes for COPIED .osu files in /app/songs ---"
          find /app/songs -name '*.osu' -exec md5sum {} \;

      - name: Test danser functionality
        env:
          LD_LIBRARY_PATH: /usr/local/lib
          # DISPLAY variable will be set by xvfb-run
        run: |
          # Ensure danser user owns the output dir and settings dir for writing
          chown -R danser:danser /app/output
          chown -R danser:danser /usr/local/bin/settings

          # CD to a writable directory before executing as danser user
          cd /app
          runuser -u danser -- /usr/bin/xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" \
          /usr/local/bin/danser-go -settings=ci-settings -replay /app/replay.osr -out /app/output/test.mp4

      - name: Upload output video
        uses: actions/upload-artifact@v4
        with:
          name: danser-output
          path: /app/output/test.mp4 